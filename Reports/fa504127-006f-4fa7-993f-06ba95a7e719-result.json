{"name": "test_login", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: Element <a class=\"nav-link\" href=\"/logout\"> is not clickable at point (1246,28) because another element <div id=\"ajaxBusy\"> obscures it\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:187:5\nElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:331:5\nwebdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:162:11\ninteraction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:121:11\nclickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:204:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:86:31\nsend@https://admin-demo.nopcommerce.com/lib_npm/jquery/jquery.min.js?v=EMj0PuW2c4zXrZtOot4WCf4G8Js:2:80625\najax@https://admin-demo.nopcommerce.com/lib_npm/jquery/jquery.min.js?v=EMj0PuW2c4zXrZtOot4WCf4G8Js:2:76167\n@https://admin-demo.nopcommerce.com/js/fu_tr7nn8cyyesmoqluhhq.scripts.js?v=u6Q9VsqEaEOfYQe8XxjQiktdteg:125:4771\na/e[t]@https://admin-demo.nopcommerce.com/js/fu_tr7nn8cyyesmoqluhhq.scripts.js?v=u6Q9VsqEaEOfYQe8XxjQiktdteg:125:1582\nt@https://admin-demo.nopcommerce.com/js/fu_tr7nn8cyyesmoqluhhq.scripts.js?v=u6Q9VsqEaEOfYQe8XxjQiktdteg:136:849\ninitOnce@https://admin-demo.nopcommerce.com/js/fu_tr7nn8cyyesmoqluhhq.scripts.js?v=u6Q9VsqEaEOfYQe8XxjQiktdteg:136:1251\ninit@https://admin-demo.nopcommerce.com/js/fu_tr7nn8cyyesmoqluhhq.scripts.js?v=u6Q9VsqEaEOfYQe8XxjQiktdteg:137:637\n@https://admin-demo.nopcommerce.com/admin/ line 1 > injectedScript:3:46\ne@https://admin-demo.nopcommerce.com/lib_npm/jquery/jquery.min.js?v=EMj0PuW2c4zXrZtOot4WCf4G8Js:2:27028\nl/</t<@https://admin-demo.nopcommerce.com/lib_npm/jquery/jquery.min.js?v=EMj0PuW2c4zXrZtOot4WCf4G8Js:2:27330", "trace": "self = <testCases.test_login.Test_Login object at 0x000001C61B84D580>\nsetup = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"db6420f1-1112-4fef-a510-1e8dd63ffa55\")>\n\n    def test_login(self, setup):\n        self.logger.info(\"*********** Verifying Login **********\")\n        self.driver = setup\n        self.driver.maximize_window()\n        self.driver.get(self.baseURL)\n        self.lp=LoginPage(self.driver)\n        self.lp.setUserName(self.username)\n        time.sleep(5)\n        self.lp.setPassword(self.password)\n        time.sleep(5)\n        self.lp.clickLogin()\n        time.sleep(10)\n        act_title = self.driver.title\n>       self.lp.clickLogout()\n\ntestCases\\test_login.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageObjects\\LoginPage.py:24: in clickLogout\n    self.driver.find_element(By.LINK_TEXT, self.button_logout_link_text).click()\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001C61B867AD0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"Element <a class=\\\\\"nav-link\\\\\" hre...\\\\nl/</t<@https://admin-demo.nopcommerce.com/lib_npm/jquery/jquery.min.js?v=EMj0PuW2c4zXrZtOot4WCf4G8Js:2:27330\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: Element <a class=\"nav-link\" href=\"/logout\"> is not clickable at point (1246,28) because another element <div id=\"ajaxBusy\"> obscures it\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:187:5\nE       ElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:331:5\nE       webdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:162:11\nE       interaction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:121:11\nE       clickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:204:29\nE       receiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:86:31\nE       send@https://admin-demo.nopcommerce.com/lib_npm/jquery/jquery.min.js?v=EMj0PuW2c4zXrZtOot4WCf4G8Js:2:80625\nE       ajax@https://admin-demo.nopcommerce.com/lib_npm/jquery/jquery.min.js?v=EMj0PuW2c4zXrZtOot4WCf4G8Js:2:76167\nE       @https://admin-demo.nopcommerce.com/js/fu_tr7nn8cyyesmoqluhhq.scripts.js?v=u6Q9VsqEaEOfYQe8XxjQiktdteg:125:4771\nE       a/e[t]@https://admin-demo.nopcommerce.com/js/fu_tr7nn8cyyesmoqluhhq.scripts.js?v=u6Q9VsqEaEOfYQe8XxjQiktdteg:125:1582\nE       t@https://admin-demo.nopcommerce.com/js/fu_tr7nn8cyyesmoqluhhq.scripts.js?v=u6Q9VsqEaEOfYQe8XxjQiktdteg:136:849\nE       initOnce@https://admin-demo.nopcommerce.com/js/fu_tr7nn8cyyesmoqluhhq.scripts.js?v=u6Q9VsqEaEOfYQe8XxjQiktdteg:136:1251\nE       init@https://admin-demo.nopcommerce.com/js/fu_tr7nn8cyyesmoqluhhq.scripts.js?v=u6Q9VsqEaEOfYQe8XxjQiktdteg:137:637\nE       @https://admin-demo.nopcommerce.com/admin/ line 1 > injectedScript:3:46\nE       e@https://admin-demo.nopcommerce.com/lib_npm/jquery/jquery.min.js?v=EMj0PuW2c4zXrZtOot4WCf4G8Js:2:27028\nE       l/</t<@https://admin-demo.nopcommerce.com/lib_npm/jquery/jquery.min.js?v=EMj0PuW2c4zXrZtOot4WCf4G8Js:2:27330\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException"}, "attachments": [{"name": "log", "source": "fa5531f8-8bd2-4175-b6a6-be1e2d7f4116-attachment.txt", "type": "text/plain"}], "start": 1718275226801, "stop": 1718275256315, "uuid": "b719d778-7940-4f64-b328-772acbf09392", "historyId": "db02b7ef6c5ab705ce5341fe1648b3fe", "testCaseId": "db02b7ef6c5ab705ce5341fe1648b3fe", "fullName": "testCases.test_login.Test_Login#test_login", "labels": [{"name": "parentSuite", "value": "testCases"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "Test_Login"}, {"name": "host", "value": "LT1A156"}, {"name": "thread", "value": "10804-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCases.test_login"}]}